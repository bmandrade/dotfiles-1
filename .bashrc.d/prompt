PATH=$PATH:/opt/install/git-radar

# format git-radar output
export GIT_RADAR_FORMAT=" (%{branch}%{ :local}%{ :changes}%{ :remote}%{ :stash})"

# return the prompt symbol to use, colorized based on the return value of the
# previous command.
function set_prompt_symbol () {
  if test $1 -eq 0 ; then
    PROMPT_SYMBOL="${GREEN}\$${RSTCOLOR}"
  else
    PROMPT_SYMBOL="${ORANGE}\$${RSTCOLOR}"
  fi
}

# determine active python virtualenv details.
function set_virtualenv () {
  if test -z "$VIRTUAL_ENV" ; then
    PYTHON_VIRTUALENV=""
  else
    PYTHON_VIRTUALENV="${RED}[py]${RSTCOLOR} "
  fi
}

# detect rvm usage
function set_ruby () {
  if [[ $GEM_HOME =~ .*rvm.* ]] ; then
    RUBY_ENV="${RED}[rb]${RSTCOLOR} "
  else
    RUBY_ENV=""
  fi
}

# set the full bash prompt.
function set_bash_prompt () {
  # set the PROMPT_SYMBOL variable. We do this first so we don't lose the
  # return value of the last command.
  set_prompt_symbol $?

  # set the PYTHON_VIRTUALENV variable.
  set_virtualenv

  # set rvm usage
  set_ruby

  # set the bash prompt variable.
  PS1="${PYTHON_VIRTUALENV}${RUBY_ENV}${GREEN}\w${RSTCOLOR}\$(git-radar --bash) ${PROMPT_SYMBOL} "

  # sync history cross tabs
  history -a; history -c;history -r

  # set tab path
  echo -ne "\033]0;${PWD/#$HOME/~}\007"
}

PROMPT_COMMAND=set_bash_prompt
